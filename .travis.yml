sudo: required

language: node_js

node_js:
  - '10'

before_cache:
  # Save tagged docker images
  - >
    mkdir -p $HOME/docker && docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}'
    | xargs -n 2 -t sh -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'

cache:
  bundler: true
  directories:
    - $HOME/docker

services:
  - docker

before_install:
  - if [[ -d $HOME/docker ]]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi
  - npm i -g yarn

install:
  - yarn dinstall

stages:
  - lint code
  - test code
  - code coverage
  - update documentation
  - deploy openapi
  - publish npm packages
# stages:
#   - lint code
#   - test code
#   - code coverage
#   - name: update documentation
#     if: branch = master
#   - name: deploy openapi
#     if: branch = master
#   - name: publish npm packages
#     if: tag IS present

jobs:
  include:
    - stage: lint code
      name: "Running eslint on packages"
      script:
        - yarn dlint

    - stage: test code
      name: "Running unit tests"
      script: 
        - yarn dtest

    - stage: test code
      name: "Running mutation tests"
      install: skip
      script: 
        - echo "TODO"

    - stage: code coverage
      name: "Running code coverage"
      install: skip
      script: 
        - echo "TODO"

    - stage: update documentation
      name: "Creating static documentation and deploying to github pages"
      install: skip
      script: 
        - echo "TODO"

    - stage: deploy openapi
      name: "Deploying openapi"
      install: skip
      script: 
        - echo "TODO"

    - stage: publish npm
      name: "Publishing npm packages"
      install: skip
      script: 
        - echo "TODO"